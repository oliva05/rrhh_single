<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGranel.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAN0AAADdAXBTogcAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABl0lEQVRYR8XUPyhGURjH8Stskllifc0UZXjLrJQUeksmkyILg6KMNoPBwCCS5E+MBgtJBhaZFBlk
        MmHh+j63c27nvR5e5X0fpz695zznvuf87rm3G8Vx/K/UoiW1aEktWlKLltSiJbVoSVo35ioor23sSXvC
        RAU9aht70p61iXIptb5JAExnFIJ58wBLOAvmbR4BrR8SYBYvqHN1swDhSZxgyNXtAgS1Xuy6vlmAe/gT
        kO/DG7pgFqADU/AhZnCJ9IIC/GQ5DIYBNDKXXkAzDUDbRNKRT7G2wF80OdJ/db/jyGVCJCeQxxEOMI93
        bGMPH5mx9OUFCjfThAGO8YBF3CE5mTSA60xCAqxBjqYFssChG/sFJcQqshv+RN7+dnSiFXITcudi3weo
        xxhWsIFmyIYSSsY+wA6WoW30nVu0QQLkcO5PINm7aBBF1bjAOrZwhWtICDmJU1SF/ymF1gMJsYAbDBTN
        h4OkEEW16MMw5GQaMAL5etVkr/8NmjzSUTR+mcsWrKlFS2rRklq0pBYtqUVLatFOHH0CG/wgAh8y8K8A
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="btn_IngresoNormal.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOwAAADsAXkocb0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAClUlEQVRYR7XXSciNURzH8Wu2MEVRUoYyL5BkiI1hwRYlslCmhBQyZSFDJAtjhqzNYWGKDWVINohk
        yiySIZkyfr/n8dT1eu583l996vnf95z/c+977z3n3FwZaY0VOI59mIwGSNMem/AEb/EYu9EVUXIRT+FN
        9uADjqAZzEy8x3SMxixcwUcMR81ZCV9V01Dlcj3wDMfQC/txHvlpiU/wydUc34J3mBGqJL1xD7/xEgOR
        n4V4geahipBVeIgmoUrSCN2Q/5jxpt7cJxEtbeD7PC1UxTMPb9AiVBGzDvfROFTZ8b/xCH5rosdPuO/5
        LiwpYC9+YQSiZhC+4RauleAYx9b9YNaU5bidXJYVxy5LLuNkGL7jEs6W4BjHDkHUbMBXbMT6PBfg6uj1
        Xfg5cWzUdIdL64JQ/Ztz2IKO+IITcKxzosSv1lWcQv4mlOYVJsGV0gWoIRzrnLqLVFXxX+tNOoTq/7jo
        jMdcuE4YxzrHuTVlJH5gXKiycxmr0QeuAf1hnONce1SVdnDX2xyqwlkEzwKt8Bz5m5Zz7WGvinMU11Fq
        R3O3dKP6CQ8kXZDGufawV0WZjc/oG6rS8dWPhaejurGHvexZVnrCw8ScUMWJvexp75I5g9PI+spVG3vZ
        92SoisSTjp/kfqGKmwGwt8e4gnGlq2TTqTR3MD+5zM42HEou6yWHsTW5zM4OHEgu6yUHsT25zI77vmt4
        fcUDS9FzwlC4oLizxU4n2HtwqArEnewmfCtiZyduwHsUzRi4iUwIVZxMhD1HhaqMLIbHKjeaWvZ053pa
        TntVlKlwc3GPXwP3fI/m6gzT9i/jY+nfHbsWD2CPKagqNl8K9/zX8LyndK3wB0j6I8TH0r871sOpc9Mn
        mJFc7g+xpKBHoOGDxAAAAABJRU5ErkJggg==
</value>
  </data>
</root>